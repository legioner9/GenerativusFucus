'use strict';

const { propObj, generativusFucus } = require('v.2');

propObj.returnBfn = (bfn, closureForFn) => {
  if (!closureForFn.flags.kill) {
    return bfn;
  } else return () => undefined;
};

propObj.comutClosure = (closureForFn) => {
  if (closureForFn.context.counter === closureForFn.context.max) closureForFn.flags.kill = true;
  else closureForFn.context.counter++;
  return closureForFn;
};

propObj.closureForFn.context.max = 2;

const fn = function(...args) {
  console.dir({ args, this: this });
};

// Use
debugger
const fucus = generativusFucus(propObj, fn);
fucus('a');// call
fucus.printFn();
console.dir({ fucus });
fucus('b');// return undefined
console.dir({ fucus });
fucus('c');
console.dir({ fucus });

debugger
